# Generated by Django 3.2.8 on 2021-10-26 22:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banderas',
            fields=[
                ('cod_bandera', models.AutoField(primary_key=True, serialize=False)),
                ('nom_bandera', models.CharField(max_length=20, verbose_name='Nombre')),
            ],
        ),
        migrations.CreateModel(
            name='Departamentos',
            fields=[
                ('cod_departamento', models.AutoField(primary_key=True, serialize=False)),
                ('nom_departamento', models.CharField(max_length=20, verbose_name='Departamento')),
            ],
        ),
        migrations.CreateModel(
            name='Estaciones',
            fields=[
                ('cod_estacion', models.AutoField(primary_key=True, serialize=False)),
                ('nom_estacion', models.CharField(max_length=30, verbose_name='Nombre_Estación')),
                ('dir_estacion', models.CharField(max_length=30, verbose_name='Direccion')),
                ('cod_bandera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Empresa', to='visualization.banderas')),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_productos',
            fields=[
                ('cod_tipo_producto', models.AutoField(primary_key=True, serialize=False)),
                ('nom_tipo_producto', models.CharField(max_length=60, verbose_name='Producto')),
            ],
        ),
        migrations.CreateModel(
            name='Municipios',
            fields=[
                ('cod_municipio', models.AutoField(primary_key=True, serialize=False)),
                ('nom_municipio', models.CharField(max_length=20, verbose_name='Municipio')),
                ('cod_departamentofk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Codigo_Departamento', to='visualization.departamentos')),
            ],
        ),
        migrations.CreateModel(
            name='Estaciones_productos',
            fields=[
                ('id_estacion_producto', models.AutoField(primary_key=True, serialize=False)),
                ('periodo', models.DateField()),
                ('mes', models.DateField()),
                ('precio', models.IntegerField(default=0)),
                ('estado', models.BooleanField()),
                ('cod_estacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Codigo_Estación', to='visualization.estaciones')),
                ('cod_tipo_producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Codigo_Producto', to='visualization.tipo_productos')),
            ],
        ),
        migrations.AddField(
            model_name='banderas',
            name='cod_municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Codigo_Municipio', to='visualization.municipios'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=15, unique=True, verbose_name='Username')),
                ('password', models.CharField(max_length=256, verbose_name='Password')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('email', models.EmailField(max_length=100, verbose_name='Email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
